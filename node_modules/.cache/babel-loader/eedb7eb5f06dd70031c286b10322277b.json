{"ast":null,"code":"import _classCallCheck from \"D:\\\\pr\\\\React\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\pr\\\\React\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\pr\\\\React\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\pr\\\\React\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\pr\\\\React\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\pr\\\\react\\\\todo\\\\src\\\\components\\\\TodoListItem\\\\TodoListItem.js\";\nimport React, { Component } from \"react\";\nimport \"./todoListItem.css\";\n/*изначальный код выглядит так: в props приходят артибуты label из App.js\r\n\r\nconst TodoListItem = (props)=>{ \r\n     return(\r\n        <span>{props.label}</span>\r\n    );\r\n};\r\nНиже будет анологичный код, но с деструкторизацией объекта. Значения сразу пойдут в перменную label\r\n*/\n\nvar TodoListItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoListItem, _Component);\n\n  function TodoListItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoListItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoListItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      done: false,\n      important: false\n    };\n\n    _this.onLabelClick = function () {\n      _this.setState({\n        done: true\n      });\n    };\n\n    _this.onMarkImportant = function () {\n      _this.setState({\n        important: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoListItem, [{\n    key: \"render\",\n    value: function render() {\n      var label = this.props.label;\n      var _this$state = this.state,\n          done = _this$state.done,\n          important = _this$state.important;\n      var classNames = \"todo-list-item\";\n\n      if (done) {\n        classNames += \" done\";\n      }\n\n      if (important) {\n        classNames += ' important';\n      }\n\n      return React.createElement(\"span\", {\n        className: classNames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"todo-list-item-label\",\n        onClick: this.onLabelClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, label), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success btn-sm\",\n        onClick: this.onMarkImportant(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-exclamation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-danger btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-trash-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TodoListItem;\n}(Component);\n\nexport { TodoListItem as default };","map":{"version":3,"sources":["D:\\pr\\react\\todo\\src\\components\\TodoListItem\\TodoListItem.js"],"names":["React","Component","TodoListItem","state","done","important","onLabelClick","setState","onMarkImportant","label","props","classNames"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,oBAAP;AACA;;;;;;;;;;IAUqBC,Y;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,KADA;AAENC,MAAAA,SAAS,EAAE;AAFL,K;;UAKRC,Y,GAAe,YAAM;AACnB,YAAKC,QAAL,CAAc;AACZH,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,K;;UAEDI,e,GAAiB,YAAI;AACnB,YAAKD,QAAL,CAAc;AACZF,QAAAA,SAAS,EAAE;AADC,OAAd;AAGD,K;;;;;;;6BAEQ;AAAA,UACCI,KADD,GACU,KAAKC,KADf,CACCD,KADD;AAAA,wBAEqB,KAAKN,KAF1B;AAAA,UAECC,IAFD,eAECA,IAFD;AAAA,UAEOC,SAFP,eAEOA,SAFP;AAIP,UAAIM,UAAU,GAAG,gBAAjB;;AACA,UAAIP,IAAJ,EAAU;AACRO,QAAAA,UAAU,IAAI,OAAd;AACD;;AAED,UAAGN,SAAH,EAAa;AACXM,QAAAA,UAAU,IAAG,YAAb;AACD;;AAED,aACE;AAAM,QAAA,SAAS,EAAEA,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,sBADZ;AAGE,QAAA,OAAO,EAAE,KAAKL,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGG,KALH,CADF,EAQE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,gCAAhC;AACA,QAAA,OAAO,EAAE,KAAKD,eAAL,EADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CARF,EAaE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,+BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAbF,CADF;AAmBD;;;;EAlDuCP,S;;SAArBC,Y","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./todoListItem.css\";\r\n/*изначальный код выглядит так: в props приходят артибуты label из App.js\r\n\r\nconst TodoListItem = (props)=>{ \r\n     return(\r\n        <span>{props.label}</span>\r\n    );\r\n};\r\nНиже будет анологичный код, но с деструкторизацией объекта. Значения сразу пойдут в перменную label\r\n*/\r\n\r\nexport default class TodoListItem extends Component {\r\n  state = {\r\n    done: false,\r\n    important: false\r\n  };\r\n\r\n  onLabelClick = () => {\r\n    this.setState({\r\n      done: true\r\n    });\r\n  };\r\n\r\n  onMarkImportant =()=>{\r\n    this.setState({\r\n      important: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { label} = this.props;\r\n    const { done, important } = this.state;\r\n\r\n    let classNames = \"todo-list-item\";\r\n    if (done) {\r\n      classNames += \" done\";\r\n    }\r\n\r\n    if(important){\r\n      classNames+= ' important';\r\n    }\r\n\r\n    return (\r\n      <span className={classNames}>\r\n        <span\r\n          className=\"todo-list-item-label\"\r\n          \r\n          onClick={this.onLabelClick}\r\n        >\r\n          {label}\r\n        </span>\r\n        <button type=\"button\" className=\"btn btn-outline-success btn-sm\"\r\n        onClick={this.onMarkImportant()}>\r\n          <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n\r\n        <button type=\"button\" className=\"btn btn-outline-danger btn-sm\">\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}