{"ast":null,"code":"var _jsxFileName = \"D:\\\\pr\\\\react\\\\todo\\\\src\\\\components\\\\TodoListItem\\\\TodoListItem.js\";\nimport React from 'react';\nimport './todoListItem.css';\n/*изначальный код выглядит так: в props приходят артибуты label из TodoList\r\n\r\nconst TodoListItem = (props)=>{ \r\n     return(\r\n        <span>{props.label}</span>\r\n    );\r\n};\r\nНиже будет анологичный код, но с деструкторизацией объекта. Значения сразу пойдут в перменную label\r\n*/\n\nvar TodoListItem = function TodoListItem(_ref) {\n  var label = _ref.label,\n      _ref$important = _ref.important,\n      important = _ref$important === void 0 ? false : _ref$important;\n  var style = {\n    color: important ? 'tomato' : 'black'\n  };\n  return React.createElement(\"span\", {\n    className: \"todo-list-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"todo-list-item-label\",\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, label), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-outline-success btn-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-exclamation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-outline-danger btn-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-trash-o\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n};\n\nexport default TodoListItem;","map":{"version":3,"sources":["D:\\pr\\react\\todo\\src\\components\\TodoListItem\\TodoListItem.js"],"names":["React","TodoListItem","label","important","style","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA;;;;;;;;;;AASA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA8B;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,4BAArBC,SAAqB;AAAA,MAArBA,SAAqB,+BAAT,KAAS;AAE/C,MAAMC,KAAK,GAAE;AACTC,IAAAA,KAAK,EAAEF,SAAS,GAAE,QAAF,GAAa;AADpB,GAAb;AAIA,SACA;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACA,IAAA,SAAS,EAAG,sBADZ;AAEI,IAAA,KAAK,EAAEC,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKF,KAHL,CADA,EAMA;AAAQ,IAAA,IAAI,EAAC,QAAb;AACI,IAAA,SAAS,EAAC,gCADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAG,IAAA,SAAS,EAAE,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CANA,EAWA;AAAQ,IAAA,IAAI,EAAG,QAAf;AACI,IAAA,SAAS,EAAC,+BADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAXA,CADA;AAoBH,CA1BD;;AA2BA,eAAeD,YAAf","sourcesContent":["import React from 'react';\r\nimport './todoListItem.css'\r\n/*изначальный код выглядит так: в props приходят артибуты label из TodoList\r\n\r\nconst TodoListItem = (props)=>{ \r\n     return(\r\n        <span>{props.label}</span>\r\n    );\r\n};\r\nНиже будет анологичный код, но с деструкторизацией объекта. Значения сразу пойдут в перменную label\r\n*/\r\nconst TodoListItem = ({label, important = false})=>{ \r\n    \r\n    const style ={\r\n        color: important? 'tomato' : 'black'\r\n    };\r\n\r\n    return(\r\n    <span className='todo-list-item'> \r\n    <span\r\n    className = 'todo-list-item-label'\r\n        style={style}>\r\n        {label}\r\n    </span>\r\n    <button type='button'\r\n        className='btn btn-outline-success btn-sm'>\r\n        <i className ='fa fa-exclamation'/>\r\n    </button>\r\n\r\n    <button type = 'button'\r\n        className='btn btn-outline-danger btn-sm'>\r\n        <i className='fa fa-trash-o'/>\r\n    </button>\r\n\r\n\r\n    </span>\r\n   );\r\n};\r\nexport default TodoListItem"]},"metadata":{},"sourceType":"module"}