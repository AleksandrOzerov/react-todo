{"ast":null,"code":"import _classCallCheck from \"D:\\\\pr\\\\React\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\pr\\\\React\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\pr\\\\React\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\pr\\\\React\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\pr\\\\React\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\pr\\\\react\\\\todo\\\\src\\\\components\\\\TodoListItem\\\\TodoListItem.js\";\nimport React, { Component } from \"react\";\nimport \"./todoListItem.css\";\n/* в props приходят артибуты label из App.js\r\n\r\nconst TodoListItem = (props)=>{ \r\n     return(\r\n        <span>{props.label}</span>\r\n    );\r\n};\r\nНиже будет анологичный код, но с деструкторизацией объекта. Значения сразу пойдут в перменную label\r\n*/\n\nvar TodoListItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoListItem, _Component);\n\n  function TodoListItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoListItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoListItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      //объект state с парами ключи-значение, который можно в дальнейшем деструктурировать\n      done: false,\n      important: false\n    };\n    return _this;\n  }\n\n  _createClass(TodoListItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          onDeleted = _this$props.onDeleted,\n          onToggleImportant = _this$props.onToggleImportant,\n          onToggleDone = _this$props.onToggleDone;\n      var _this$state = this.state,\n          done = _this$state.done,\n          important = _this$state.important;\n      var classNames = \"todo-list-item\";\n\n      if (done) {\n        classNames += \" done\";\n      }\n\n      if (important) {\n        classNames += \" important\";\n      }\n\n      return React.createElement(\"span\", {\n        className: classNames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"todo-list-item-label\",\n        onClick: onToggleDone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, label), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success btn-sm\",\n        onClick: onToggleImportant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-exclamation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-danger btn-sm\",\n        onClick: onDeleted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-trash-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TodoListItem;\n}(Component);\n\nexport { TodoListItem as default };","map":{"version":3,"sources":["D:\\pr\\react\\todo\\src\\components\\TodoListItem\\TodoListItem.js"],"names":["React","Component","TodoListItem","state","done","important","props","label","onDeleted","onToggleImportant","onToggleDone","classNames"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,oBAAP;AACA;;;;;;;;;;IAUqBC,Y;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACN;AACAC,MAAAA,IAAI,EAAE,KAFA;AAGNC,MAAAA,SAAS,EAAE;AAHL,K;;;;;;6BAQC;AAAA,wBAEuD,KAAKC,KAF5D;AAAA,UAECC,KAFD,eAECA,KAFD;AAAA,UAEQC,SAFR,eAEQA,SAFR;AAAA,UAEmBC,iBAFnB,eAEmBA,iBAFnB;AAAA,UAEsCC,YAFtC,eAEsCA,YAFtC;AAAA,wBAGqB,KAAKP,KAH1B;AAAA,UAGCC,IAHD,eAGCA,IAHD;AAAA,UAGOC,SAHP,eAGOA,SAHP;AAKP,UAAIM,UAAU,GAAG,gBAAjB;;AACA,UAAIP,IAAJ,EAAU;AACRO,QAAAA,UAAU,IAAI,OAAd;AACD;;AAED,UAAIN,SAAJ,EAAe;AACbM,QAAAA,UAAU,IAAI,YAAd;AACD;;AAED,aACE;AAAM,QAAA,SAAS,EAAEA,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,sBAAhB;AACC,QAAA,OAAO,EAAED,YADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEGH,KAFH,CADF,EAKE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,gCAFZ;AAGE,QAAA,OAAO,EAAEE,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CALF,EAaE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,+BAAhC;AACA,QAAA,OAAO,EAAED,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAbF,CADF;AAoBD;;;;EA3CuCP,S;;SAArBC,Y","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./todoListItem.css\";\r\n/* в props приходят артибуты label из App.js\r\n\r\nconst TodoListItem = (props)=>{ \r\n     return(\r\n        <span>{props.label}</span>\r\n    );\r\n};\r\nНиже будет анологичный код, но с деструкторизацией объекта. Значения сразу пойдут в перменную label\r\n*/\r\n\r\nexport default class TodoListItem extends Component {\r\n  state = {\r\n    //объект state с парами ключи-значение, который можно в дальнейшем деструктурировать\r\n    done: false,\r\n    important: false\r\n  };\r\n\r\n \r\n\r\n  render() {\r\n    \r\n    const { label, onDeleted, onToggleImportant, onToggleDone } = this.props;\r\n    const { done, important } = this.state;\r\n\r\n    let classNames = \"todo-list-item\";\r\n    if (done) {\r\n      classNames += \" done\";\r\n    }\r\n\r\n    if (important) {\r\n      classNames += \" important\";\r\n    }\r\n\r\n    return (\r\n      <span className={classNames}>\r\n        <span className=\"todo-list-item-label\" \r\n         onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-success btn-sm\"\r\n          onClick={onToggleImportant}\r\n        >\r\n          <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n\r\n        <button type=\"button\" className=\"btn btn-outline-danger btn-sm\"\r\n        onClick={onDeleted}>\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}