{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\pr\\\\React\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\pr\\\\react\\\\todo\\\\src\\\\components\\\\TodoList\\\\TodoList.js\";\nimport React from \"react\";\nimport TodoListItem from \"../TodoListItem\";\nimport \"./todoList.css\";\n\nvar TodoList = function TodoList(_ref) {\n  var todos = _ref.todos,\n      _onDeleted = _ref.onDeleted;\n  //деструкторизация props объекта в переменную todos\n  var elements = todos.map(function (item) {\n    var id = item.id,\n        itemProps = _objectWithoutProperties(item, [\"id\"]); //деструкторизацию и добавление rest параметра itemProps, в который войдут\n\n\n    return (//все свойства объека которые не были деструторированы (все свойства кроме id)\n\n      /*\r\n      <li>\r\n      можно записать так:\r\n      <TodoListItem\r\n      label ={item.label}\r\n      important = {item.important}/>\r\n      </li>\r\n      этот код можно записать короче выполнив spread оператор для объекта, это означает\r\n      взять каждое свойство из объекта item и передать в качестве атрибута вместе со значением\r\n      в todoListItem\r\n      */\n      React.createElement(\"li\", {\n        key: id,\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(TodoListItem, Object.assign({}, itemProps, {\n        onDeleted: function onDeleted() {\n          return _onDeleted(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })))\n    );\n  });\n  return React.createElement(\"ul\", {\n    className: \"list-group todo-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, elements);\n};\n\nexport default TodoList;","map":{"version":3,"sources":["D:\\pr\\react\\todo\\src\\components\\TodoList\\TodoList.js"],"names":["React","TodoListItem","TodoList","todos","onDeleted","elements","map","item","id","itemProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAO,gBAAP;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA0B;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,UAAgB,QAAhBA,SAAgB;AACzC;AAEA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI,EAAI;AAAA,QACzBC,EADyB,GACJD,IADI,CACzBC,EADyB;AAAA,QAClBC,SADkB,4BACJF,IADI,WACE;;;AACnC,WACE;;AACA;;;;;;;;;;;AAYA;AAAI,QAAA,GAAG,EAAEC,EAAT;AAAa,QAAA,SAAS,EAAC,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD,oBAAkBC,SAAlB;AACA,QAAA,SAAS,EAAE;AAAA,iBAAIL,UAAS,CAACI,EAAD,CAAb;AAAA,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAdF;AAmBD,GArBgB,CAAjB;AAuBA,SAAO;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCH,QAAtC,CAAP;AACD,CA3BD;;AA4BA,eAAeH,QAAf","sourcesContent":["import React from \"react\";\r\nimport TodoListItem from \"../TodoListItem\";\r\nimport \"./todoList.css\";\r\nconst TodoList = ({ todos, onDeleted }) => {\r\n  //деструкторизация props объекта в переменную todos\r\n\r\n  const elements = todos.map(item => {\r\n    const { id, ...itemProps } = item; //деструкторизацию и добавление rest параметра itemProps, в который войдут\r\n    return (\r\n      //все свойства объека которые не были деструторированы (все свойства кроме id)\r\n      /*\r\n<li>\r\nможно записать так:\r\n    <TodoListItem\r\n    label ={item.label}\r\n    important = {item.important}/>\r\n</li>\r\n\r\nэтот код можно записать короче выполнив spread оператор для объекта, это означает\r\nвзять каждое свойство из объекта item и передать в качестве атрибута вместе со значением\r\nв todoListItem\r\n*/\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem {...itemProps} \r\n        onDeleted={()=>onDeleted(id)}/>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className=\"list-group todo-list\">{elements}</ul>;\r\n};\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}