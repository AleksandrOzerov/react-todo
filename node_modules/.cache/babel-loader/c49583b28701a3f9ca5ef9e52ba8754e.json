{"ast":null,"code":"import _classCallCheck from \"D:\\\\pr\\\\React\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\pr\\\\React\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\pr\\\\React\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\pr\\\\React\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\pr\\\\React\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\pr\\\\react\\\\todo\\\\src\\\\components\\\\TodoListItem\\\\TodoListItem.js\";\nimport React, { Component } from \"react\";\nimport \"./todoListItem.css\";\n/*изначальный код выглядит так: в props приходят артибуты label из App.js\r\n\r\nconst TodoListItem = (props)=>{ \r\n     return(\r\n        <span>{props.label}</span>\r\n    );\r\n};\r\nНиже будет анологичный код, но с деструкторизацией объекта. Значения сразу пойдут в перменную label\r\n*/\n\nvar TodoListItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoListItem, _Component);\n\n  function TodoListItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoListItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoListItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      done: true\n    };\n\n    _this.onLabelClick = function () {\n      console.log(\"Done: \".concat(_this.props.label));\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoListItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          _this$props$important = _this$props.important,\n          important = _this$props$important === void 0 ? false : _this$props$important;\n      var done = this.state.done;\n      var classNames = 'todo-list-item';\n\n      if (done) {\n        classNames += 'done';\n      }\n\n      var style = {\n        color: important ? \"tomato\" : \"black\"\n      };\n      return React.createElement(\"span\", {\n        className: classNames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"todo-list-item-label\",\n        style: style,\n        onClick: this.onLabelClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, label), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-exclamation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-danger btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-trash-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TodoListItem;\n}(Component);\n\nexport { TodoListItem as default };","map":{"version":3,"sources":["D:\\pr\\react\\todo\\src\\components\\TodoListItem\\TodoListItem.js"],"names":["React","Component","TodoListItem","state","done","onLabelClick","console","log","props","label","important","classNames","style","color"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,oBAAP;AACA;;;;;;;;;;IAUqBC,Y;;;;;;;;;;;;;;;;;UAEnBC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;;UAIRC,Y,GAAe,YAAM;AACnBC,MAAAA,OAAO,CAACC,GAAR,iBAAqB,MAAKC,KAAL,CAAWC,KAAhC;AACD,K;;;;;;;6BAEQ;AAAA,wBAC8B,KAAKD,KADnC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,8CACQC,SADR;AAAA,UACQA,SADR,sCACoB,KADpB;AAAA,UAEAN,IAFA,GAEM,KAAKD,KAFX,CAEAC,IAFA;AAIP,UAAIO,UAAU,GAAG,gBAAjB;;AACA,UAAGP,IAAH,EAAQ;AACNO,QAAAA,UAAU,IAAI,MAAd;AACD;;AAED,UAAMC,KAAK,GAAG;AACZC,QAAAA,KAAK,EAAEH,SAAS,GAAG,QAAH,GAAc;AADlB,OAAd;AAIA,aACE;AAAM,QAAA,SAAS,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,sBADZ;AAEE,QAAA,KAAK,EAAEC,KAFT;AAGE,QAAA,OAAO,EAAE,KAAKP,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGI,KALH,CADF,EAQE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,gCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CARF,EAYE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,+BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAZF,CADF;AAkBD;;;;EAzCuCR,S;;SAArBC,Y","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./todoListItem.css\";\r\n/*изначальный код выглядит так: в props приходят артибуты label из App.js\r\n\r\nconst TodoListItem = (props)=>{ \r\n     return(\r\n        <span>{props.label}</span>\r\n    );\r\n};\r\nНиже будет анологичный код, но с деструкторизацией объекта. Значения сразу пойдут в перменную label\r\n*/\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n  state = {\r\n    done: true\r\n  }\r\n\r\n  onLabelClick = () => {\r\n    console.log(`Done: ${this.props.label}`);\r\n  };\r\n\r\n  render() {\r\n    const { label, important = false } = this.props;\r\n    const {done}=this.state;\r\n\r\n    let classNames = 'todo-list-item';\r\n    if(done){\r\n      classNames += 'done'\r\n    }\r\n\r\n    const style = {\r\n      color: important ? \"tomato\" : \"black\"\r\n    };\r\n\r\n    return (\r\n      <span className={classNames}>\r\n        <span\r\n          className=\"todo-list-item-label\"\r\n          style={style}\r\n          onClick={this.onLabelClick}\r\n        >\r\n          {label}\r\n        </span>\r\n        <button type=\"button\" className=\"btn btn-outline-success btn-sm\">\r\n          <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n\r\n        <button type=\"button\" className=\"btn btn-outline-danger btn-sm\">\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}